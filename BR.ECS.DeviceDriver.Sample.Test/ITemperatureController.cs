//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sila2Client
{
    
    
    /// <summary>
    /// This is a simple example of a generic Feature for controlling and retrieving the temperature.    A new target temperature can be set anytime with the 'Control Temperature' Command.    The temperature range has been limited to prevent major damages of a device.    In case the first target temperature has not been reached, a ControlInterrupted Error should be thrown.
    /// </summary>
    [Tecan.Sila2.SilaFeatureAttribute(false, "examples")]
    [Tecan.Sila2.SilaIdentifierAttribute("TemperatureController")]
    [Tecan.Sila2.SilaDisplayNameAttribute("Temperature Controller")]
    public partial interface ITemperatureController
    {
        
        /// <summary>
        /// The current temperature as measured by the controller.
        /// </summary>
        [Tecan.Sila2.UnitAttribute("K", Kelvin=0)]
        [Tecan.Sila2.ObservableAttribute()]
        double CurrentTemperature
        {
            get;
        }
        
        /// <summary>
        /// The current state of the device, either On or Off.
        /// </summary>
        bool DeviceState
        {
            get;
        }
        
        /// <summary>
        /// Control the temperature gradually to a set target.      It is RECOMMENDED to use an oscillation free control system.
        /// </summary>
        /// <param name="targetTemperature">The target temperature that the server will try to reach.        Note that the command might be completed at a temperature that it evaluates to be close enough.        If the temperature cannot be reached, a 'Temperature Not Reachable' error will be thrown.</param>
        [Tecan.Sila2.ObservableAttribute()]
        [Tecan.Sila2.ThrowsAttribute(typeof(TemperatureNotReachableException))]
        [Tecan.Sila2.ThrowsAttribute(typeof(ControlInterruptedException))]
        Tecan.Sila2.IObservableCommand ControlTemperature([Tecan.Sila2.UnitAttribute("K", Kelvin=0)] [Tecan.Sila2.MaximalInclusiveAttribute(363D)] [Tecan.Sila2.MinimalExclusiveAttribute(277D)] double targetTemperature);
        
        /// <summary>
        /// Switch device state from On to Off, or from Off to On.
        /// </summary>
        /// <param name="isOn">Switch device state to isOn state.</param>
        void SwitchDeviceState(bool isOn);
    }
    
    /// <summary>
    /// The ambient conditions prohibit the device from reaching the target temperature.
    /// </summary>
    public class TemperatureNotReachableException : System.Exception
    {
        
        /// <summary>
        /// Create a new instance
        /// </summary>
        /// <param name="message">The actual error message</param>
        public TemperatureNotReachableException(string message) : 
                base(message)
        {
        }
    }
    
    /// <summary>
    /// The control of temperature could not be finished as it has been interrupted by another 'Control Temperature' command.
    /// </summary>
    public class ControlInterruptedException : System.Exception
    {
        
        /// <summary>
        /// Create a new instance
        /// </summary>
        /// <param name="message">The actual error message</param>
        public ControlInterruptedException(string message) : 
                base(message)
        {
        }
    }
}
